name: GCP Deploy
on:
  push:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Lint
        id: lint-step
        run: npm run lint
      - name: check-lint
        if: failure() && steps.lint-step.outcome == 'failure'
        run: echo "CÃ³digo precisa ser revisto!!"

  build_docker:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: alexandermdc/wa_lab_04:latest

  deploy:
    needs: build_docker
    runs-on: ubuntu-latest
    environment: wagcp_deploy
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/wa_lab_04:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Deploy Docker image
        run: |
          gcloud run deploy wacicd \
            --image $IMAGE_NAME \
            --region us-west1 \
            --memory 128Mi \
            --min-instances 0 \
            --max-instances 1 \
            --platform managed \
            --port 8080 \
            --allow-unauthenticated
